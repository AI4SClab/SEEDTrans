import matplotlib.pyplot as plt
import pandas as pd


# Sample data
x = list(range(1, 61))
df = pd.read_csv('/media/user/8T/Byx/CSIformer-main/shiyandaima/normalization_result_pv.csv')
l_columns = ['l1', 'l2', 'l3', 'l4', 'l5']
h_columns = ['h1', 'h2', 'h3', 'h4', 'h5']



sequence1 = [-0.196940579, 0.303301147, 1.486190515, 1.647085848, 4.44892982, 7.416650528, 10.46483074, 13.59387273, 15.6367695, 18.01898308, 19.19538611, 20.70605816, 21.39841677, 22.36780236, 22.75388914, 16.95568807, 23.84634383, 21.83595683, 21.98656539, 19.37809372, 19.04533189, 15.11381763, 13.4735421, 9.579013808, 6.790408124, 7.726401922, 4.775009131, 1.623186987, 0.159910738, -0.327423502, -0.192464704, 0.476697854, 1.455816133, 2.776782801, 4.669743091, 4.837272675, 9.143176929, 12.73919507, 13.30578892, 16.80974635, 17.93109139, 20.20097376, 20.97310315, 21.26205857, 21.98858494, 18.59133834, 21.61660087, 21.60652166, 20.55841618, 19.18375342, 18.10017595, 16.92889044, 15.55783689, 10.89359678, 6.724981762, 4.82798618, 4.247447878, 1.952877757, 0.235431701, -0.084812271]
Low_Component = [-1.72, -1.76, -1.55, -1.09, -0.612, -0.0187, 0.525, 1.02, 1.38, 1.66, 1.93, 2.05, 2.26, 2.1, 1.97, 2.18, 2.33, 2.29, 1.92, 1.57, 1.09, 0.625, -0.0774, -0.324, -0.564, -0.775, -1.45, -1.71, -1.79, -1.51, -1.42, -1.31, -0.968, -0.632, -0.385, 0.0735, 0.548, 0.961, 1.24, 1.64, 1.94, 2.04, 1.96, 1.92, 1.66, 1.84, 2.12, 1.76, 1.63, 1.27, 1.11, 0.769, 0.0663, -0.745, -0.917, -1.15, -1.47, -1.8, -1.91, -1.95]
High_Component_1 = [-0.03562462, 0.049378458, 0.004456394, -0.010057434, -0.005855543, -0.000223712, 0.005225505, -0.002174627, 0.000759669, 0.000683243, -0.002132581, 0.004623637, 0.012563333, -0.050495941, 0.040529284, 0.010456105, -0.016661346, 0.007814177, -0.027932651, 0.024126043, 0.003551546, -0.017998328, 0.011628583, 0.020765954, -0.023527284, -0.010449007, 0.002005914, 0.020598577, 0.008732344, -0.011326696, -0.03867758, 0.028479477, 0.019545739, -0.028536783, 0.01202235, 0.005875204, 0.011317086, -0.054598757, 0.043902166, 0.004679862, -0.011129555, -0.002895048, 0.018054939, -0.037366756, 0.006825599, 0.035164208, -0.013744878, -0.011241894, 0.004923668, 0.012961453, -0.031424819, 0.006604097, 0.031719069, -0.021422921, -0.007597971, 0.014210917, -0.010556801, 0.00128659, 0.035422855, -0.02880454]
High_Component_2 = [0.032347379, -0.008129691, -0.045540802, -0.001731346, 0.031466964, 0.008503603, -0.010877437, -0.006314963, 0.001608482, 0.002116046, 0.001599169, -0.002034491, -0.003496595, 0.012413203, 0.004264333, -0.024861589, -0.005742924, 0.022834573, 0.012357546, -0.008907924, -0.017606815, 0.001611055, 0.011358205, -0.008557718, -0.001366878, 0.020526457, 0.003640223, -0.022228501, -0.015756761, 0.013432558, 0.030070511, -0.000865327, -0.035485794, -0.007056343, 0.023460944, -0.000816947, -0.010882807, 0.017247456, 0.00723497, -0.027735438, -0.005874438, 0.021866101, 0.001841513, -0.000708104, 0.007277709, -0.018948105, -0.016981326, 0.021853552, 0.016728214, -0.012466908, -0.001107947, 0.009105433, -0.016604093, -0.011847442, 0.019590375, 0.00757641, -0.009713588, -0.001002133, -0.006506958, 0.000551401]
High_Component_3 = [-0.013730648, -0.006476613, 0.030561422, 0.02201381, -0.032955646, -0.038551069, 0.009754867, 0.029047699, 0.006480977, -0.010221956, -0.006672977, 0.001620886, 0.004389542, -0.002501871, -0.005634415, 0.009836462, 0.013733135, -0.013611988, -0.024233974, 0.005282896, 0.026852545, 0.008749257, -0.017324565, -0.011744992, 0.005744571, -0.001160976, -0.006964407, 0.013693841, 0.021636274, -0.007488897, -0.032110893, -0.010165008, 0.032166907, 0.027169289, -0.020834686, -0.030366854, 0.004703807, 0.011081987, -0.005160997, 0.008416707, 0.017003837, -0.012321378, -0.022403925, 0.003068201, 0.012723599, 0.009265039, 0.009571948, -0.010409141, -0.026839283, -0.000412449, 0.022679804, 0.00634624, -0.002707852, 0.005717129, -0.007629133, -0.019474855, 0.001418917, 0.016059725, 0.005834021, -0.004464858]
High_Component_4 = [0.009754867, 0.029047699, 0.006480977, -0.010221956, -0.006672977, 0.001620886, 0.004389542, -0.002501871, -0.005634415, 0.009836462, 0.013733135, -0.013611988, -0.024233974, 0.005282896, 0.026852545, 0.008749257, -0.017324565, -0.011744992, 0.005744571, -0.001160976, -0.006964407, 0.013693841, 0.021636274, -0.007488897, -0.032110893, -0.010165008, 0.032166907, 0.027169289, -0.020834686, -0.030366854, 0.004703807, 0.011081987, -0.005160997, 0.008416707, 0.017003837, -0.012321378, -0.022403925, 0.003068201, 0.012723599, 0.009265039, 0.009571948, -0.010409141, -0.026839283, -0.000412449, 0.022679804, 0.00634624, -0.002707852, 0.005717129, -0.007629133, -0.019474855, 0.001418917, 0.016059725, 0.005834021, -0.004464858, -0.012345014, -0.007894641, 0.019363197, 0.026793704, -0.006097878, -0.028437886]
High_Component_5 = [0.002457703, -0.048579304, -0.031573088, 0.017949034, 0.02885565, 0.004872408, -0.011256944, -0.005753237, 0.004413708, 0.000483557, -0.008448364, 0.002904869, 0.020264204, 0.004485185, -0.027200996, -0.020495849, 0.017968675, 0.028826578, 0.00035517, -0.017715858, -0.006214682, -0.000936744, -0.009509298, 0.002522969, 0.028506199, 0.01880284, -0.025884275, -0.038765271, 0.007866616, 0.044620059, 0.013741094, -0.030059216, -0.021935484, 0.002284952, 0.001184527, 0.005277443, 0.020505014, 0.006969561, -0.020779599, -0.018769856, 0.001810223, 0.016244744, 0.021570049, 0.004175069, -0.026352435, -0.023480514, 0.008290949, 0.018237034, 0.008595941, 0.007499157, -0.000335979, -0.019302369, -0.016784506, 0.006485795, 0.018030884, 0.008418341, -0.012109356, -0.021368141, 0.002733834, 0.034120568]
High_Component = [-0.0248, 0.124, 0.098, -0.065, -0.00999, -0.13, 0.053, 0.0111, -0.00577, -0.0502, 0.0416, -0.111, -0.204, 0.497, -0.281, -0.00344, -0.0954, 0.0897, -0.219, 0.104, -0.00231, -0.00512, 0.276, -0.105, -0.0228, 0.0984, 0.114, 0.0577, -0.0402, -0.118, -0.0833, -0.498, -0.484, -0.23, -0.252, -0.359, -0.186, -0.0891, 0.134, 0.173, 0.286, 0.33, 0.0581, 0.674, 0.411, -0.13, -0.0577, -0.0483, -0.0509, 0.0198, -0.0767, 0.017, 0.0624, 0.0914, -0.0278, -0.099, -0.0124, 0.0286, -0.0342, -0.0613]

for i in range(len(High_Component_1)):
    High_Component_1[i] = 3*High_Component_1[i]

for i in range(len(High_Component_1)):
    High_Component_2[i] = 3*High_Component_2[i]

for i in range(len(High_Component_1)):
    High_Component_3[i] = 3*High_Component_3[i]

for i in range(len(High_Component_1)):
    High_Component_4[i] = 3*High_Component_4[i]

for i in range(len(High_Component_1)):
    High_Component_5[i] = 3*High_Component_5[i]

Low_Component_1 = [-1.72, -1.76, -1.55, -1.09, -0.612, -0.0187, 0.525, 1.02, 1.38, 1.66, 1.93, 2.05, 2.26, 2.1, 1.97, 2.18, 2.33, 2.29, 1.92, 1.57, 1.09, 0.625, -0.0774, -0.324, -0.564, -0.775, -1.45, -1.71, -1.79, -1.51, -1.42, -1.31, -0.968, -0.632, -0.385, 0.0735, 0.548, 0.961, 1.24, 1.64, 1.94, 2.04, 1.96, 1.92, 1.66, 1.84, 2.12, 1.76, 1.63, 1.27, 1.11, 0.769, 0.0663, -0.745, -0.917, -1.15, -1.47, -1.8, -1.91, -1.95]
Low_Component_2 = [-3.52, -3.52, -3.07, -2.26, -1.52, -0.522, 0.437, 1.18, 2.07, 2.46, 2.86, 3.19, 3.46, 3.42, 3.29, 3.35, 3.69, 3.65, 3.26, 2.56, 1.68, 0.949, -0.0965, -0.737, -1.22, -1.7, -2.66, -3.36, -3.2, -2.01, -1.91, -2.31, -1.6, -0.603, -0.543, 0.0658, 0.906, 1.41, 2, 2.5, 2.72, 2.82, 2.74, 2.58, 2.22, 2.37, 2.95, 2.53, 1.93, 1.7, 0.943, 0.461, -0.599, -1.52, -2.38, -2.63, -3.1, -3.54, -3.77, -3.7]
Low_Component_3 = [-5.16, -4.95, -4.41, -3.39, -2.12, -0.722, 0.525, 1.67, 2.85, 3.47, 4.01, 4.46, 4.79, 4.76, 4.79, 4.7, 4.97, 5.05, 4.7, 3.65, 2.61, 1.31, -0.111, -1.07, -1.74, -2.35, -3.69, -4.67, -4.43, -3.3, -2.68, -2.85, -3.13, -0.758, -0.00445, 0.565, 1.65, 2.51, 3.25, 3.79, 4.07, 4.11, 3.74, 3.55, 2.85, 2.81, 2.65, 4.01, 3.2, 2.28, 1.48, 0.499, -0.619, -2.15, -3.32, -3.93, -4.49, -4.94, -5.25, -5.25]
Low_Component_4 = [-7.35818409, -7.040747006, -6.19626087, -4.746303547, -2.919484638, -1.061473834, 0.75333863, 2.510257595, 3.918301563, 4.900728703, 5.704957313, 6.359716308, 6.711019793, 6.738630166, 6.639566209, 6.762897481, 7.132059341, 7.177882322, 6.487679664, 5.257353811, 3.644481151, 1.678764847, -0.184793763, -1.38699956, -2.212934641, -3.609148887, -5.527403535, -6.572418617, -5.837907204, -4.434666779, -4.243728252, -4.562255196, -3.378821213, -1.446044441, -0.155260733, 0.972881372, 2.314401166, 3.569580377, 4.611809623, 5.384582423, 5.759060618, 5.734068265, 5.434363002, 4.827789395, 3.961743871, 3.740100458, 4.624163174, 5.173059574, 4.460379942, 3.268740587, 2.133449351, 0.771772898, -1.101255748, -3.093641502, -4.577811813, -5.56649936, -6.380815961, -7.023911131, -7.34514771, -7.432826749]
Low_Component_5 = [-10.48754411, -9.99302079, -8.701273597, -6.619072686, -4.119138024, -1.487868874, 1.165355056, 3.581225169, 5.480134453, 6.926432002, 8.122829521, 9.031001807, 9.450302253, 9.407732583, 9.357532802, 9.713430769, 10.18944171, 10.09873715, 9.164253354, 7.462339224, 5.011757879, 2.152375097, -0.208144658, -1.643022195, -3.075338453, -5.529088179, -8.181418487, -8.973349579, -7.663149753, -6.49270435, -6.565813506, -6.232820492, -4.41639598, -2.165476439, -0.304488685, 1.452021205, 3.302972145, 5.070948023, 6.566858634, 7.607547994, 8.115975113, 8.190675453, 7.706556755, 6.50450665, 5.429309589, 5.68737139, 6.797447817, 7.107089938, 6.151201089, 4.7075948, 3.117857647, 0.984155685, -1.74183593, -4.383420047, -6.396849855, -7.887011537, -9.077307135, -9.902013843, -10.33001258, -10.55644887]

plt.figure(dpi=400,figsize=(15,6))

# Plotting sequence1
plt.subplot(1, 3, 1)
plt.plot(x, sequence1, label='Real Power', color='black', linewidth =1.0)
plt.ylim(-6, 28)
plt.xlabel('(a)', fontsize=16)
plt.tick_params(axis='both', which='major', labelsize=16)
plt.legend(fontsize=14)

# Plotting sequence2 and sequence3
plt.subplot(1, 3, 2)
plt.plot(x, Low_Component, label='Low  Component', color='red', linewidth =1.0)
plt.plot(x, High_Component, label='High Component', color='green', linewidth =1.0)
plt.ylim(-3, 5)
plt.xlabel('(b)',fontsize=16)
plt.tick_params(axis='both', which='major', labelsize=16)
plt.legend(fontsize=14)

# Plotting sequence2 and sequence3


ax = plt.subplot(1, 3, 3)


ax.plot(x, Low_Component_1, label='L1', color='green', linewidth=1.0)
ax.plot(x, Low_Component_2, label='L2', color='darkcyan', linewidth=1.0)
ax.plot(x, Low_Component_3, label='L3', color='orange', linewidth=1.0)
ax.plot(x, Low_Component_4, label='L4', color='blue', linewidth=1.0)
ax.plot(x, Low_Component_5, label='L5', color='hotpink', linewidth=1.0)


ax.set_ylim(-12, 15)

ax.set_xlabel('(c)',fontsize=16)
plt.tick_params(axis='both', which='major', labelsize=16)
ax2 = ax.twinx()

ax2.plot(x, High_Component_1, label='H1', color='red', linewidth=1.0)
ax2.plot(x, High_Component_2, label='H2', color='purple', linewidth=1.0)
ax2.plot(x, High_Component_3, label='H3', color='yellow', linewidth=1.0)
ax2.plot(x, High_Component_4, label='H4', color='cyan', linewidth=1.0)
ax2.plot(x, High_Component_5, label='H5', color='magenta', linewidth=1.0)

ax2.set_ylim(-0.8, 1.5)
plt.tick_params(axis='both', which='major', labelsize=16)
lines, labels = ax.get_legend_handles_labels()
lines2, labels2 = ax2.get_legend_handles_labels()
lines += lines2
labels += labels2
ax.legend(lines, labels, loc='upper center', ncol=5, fontsize=10)



# Adjusting the layout
plt.tight_layout()

#plt.savefig('./wavelet')
#plt.savefig('./Wavelet Decomposition Result.pdf', format='pdf', bbox_inches='tight')

# Display the plot
plt.show()
